<% const dataToReadable=(date)=>{

    const date_=new Date(date);
    let month=['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
    let dd=date_.getDate()
    let mm=date_.getMonth()
    let monthText=date_.month(mm)
    let yyyy=date_.getFullYear()
  
    return `${isNaN(dd)?'00':dd}-${monthText}-${isNaN(yyyy)?'0000':yyyy}`
  
    } %>

<% orders?.orders?.reverse()?.forEach(order=>{ %>
<div class="page-content">
  <div class="cart">
    <div class="container">
      <div class="row">
        <div class="col-lg-12 ">
          <table class="table table-cart table-mobile ">
            <thead class="test-center">
              <tr style="background-color:rgb(234, 235, 251) ;">
                <th class="text-center">Product</th>
                <th class="text-center">delivery status</th>
                <th class="text-center">Quantity</th>
                <th class="text-center">Price</th>
                <th class="text-center ">Payment Mode</th>
              </tr>
            </thead>

            <tbody>
              <% order?.productDetails?.forEach((prodata,index)=>{ %>
              <tr>
                <td class="product-col text-center">
                  <div class="product">
                    <figure class="product-media">
                      <a href="#">
                        <img src="product-images/<%= prodata.imageName[0]%>" alt="Product image">
                      </a>
                    </figure>

                    <h3 class="product-title">
                      <a href="#"><%= prodata.productsName%></a>
                    </h3><!-- End .product-title -->
                  </div><!-- End .product -->
                </td>

                <td class=" text-center">

                  <%if(!prodata.return){%>
                  <%if(prodata.orderStatus==1){%>
                  <button class="btn btn-primary m-0 p-0">oder placed</button>
                  <% }else if(prodata.orderStatus==2){%>
                  <button class="btn btn-primary m-0 p-0">order dispatched</button>
                  <%}else if(prodata.orderStatus==3){%>
                  <button class="btn btn-primary m-0 p-0">ouy for delivery</button>
                  <%}else if(prodata.orderStatus==4){%>
                  <button class="btn btn-primary m-0 p-0">delivered</button>
                  <%}else{%>
                  <button class="btn btn-primary m-0 p-0">item cancelled</button>
                  <%}%>
                                <%}else{%>
                  <button class="btn btn-primary m-0 p-0">item returned</button>
                  <%}%>
                                </td>

                                <td class="text-center"><%= prodata.quantity%>
                </td>
                <td class=" text-center">$<%= prodata.productsPrice%></td>
                <td class=" text-center">
                  <div class="col">
                    <% if( prodata.orderStatus==4){%>
                    <P><a style="color: rgb(19, 12, 12);" id="return-btn " onclick="returnItem('<%= prodata._id%>','<%= order._id %>',this)" class="btn btn-outline-warning btn-round p-0 m-0">return</a></P>

                    <P><a style="color: rgb(37, 22, 22);" onclick="downloadInvoice('<%= order._id %>','<%= index %>')" class="btn  btn-round p-0 m-0 btn-outline-info">Download Invoice</a></P>
                    <%}else{%>
                    <P><a style="color: rgb(30, 21, 21);" onclick="cancelOrder('<%= prodata._id%>','<%= order._id %>')" href="" class="btn btn-outline-danger btn-round p-0 m-0">Cancell Product</a></P>

                    <P><a style="color: rgb(36, 24, 24);" onclick="downloadInvoice('<%= order._id %>','<%= index %>')" class="btn  btn-round p-0 m-0 btn-outline-info">Download Invoice</a></P>
                    <%}%>
                                    </div>
                                </td>
                               
                            </tr>
                            <% }) %>

              <tr style="background-color: rgb(234, 235, 251);">
                <td>
                  <div class="col ">
                    <P>OrderId: <%= order._id%></P>
                    <P>Placed On: <%=order?.createdAt.getDate()+"/"+order?.createdAt.getMonth()+"/"+order?.createdAt.getFullYear()%>
                    <P>Delivery Address: <%= order.shippingAddress.street %></P>
                    <P>Pincode: <%= order.shippingAddress.pincode %></P>
                    <P>Mobile: <%= order.shippingAddress.mobile%></P>
                    <P>Email: <%= order.shippingAddress.email%></P>
                  </div>
                </td>
                <td class="text-center ">
                  <div class="col">
                    
                    <p>payment status: [ <%= order.paymentStatus==1 ? 'Completed':'Pending'%> ]</p>
                    <p>payment mode:  <%= order.paymentMethod%> </p>
                  </div>
                </td>
                <td></td>
                <td></td>
                <td class="text-center">
                  <div class="col">
                    <p>Total Order</p>
                    <p><%= order.totalPrice%></p>
                  </div>
                </td>
              </tr>
            </tbody>
          </table><!-- End .table table-wishlist -->


        </div><!-- End .col-lg-9 -->

      </div><!-- End .row -->
    </div><!-- End .container -->
  </div><!-- End .cart -->
  <hr>
</div><!-- End .page-content -->
<% }) %>


<script src="https://unpkg.com/easyinvoice/dist/easyinvoice.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/easyinvoice/dist/easyinvoice.min.js"></script>
<script>
  function cancelOrder(prodId, orderId) {
    console.log(orderId, prodId);

    $.ajax({
      url: '/cancel-order',
      method: 'post',
      data: {
        orderId: orderId,
        prodId: prodId
      },
      beforeSend: () => {
        return confirm('this perticular order will be cancelled')
      },
      success: (response) => {
        if (response.status) {
          document.querySelector('#cancelBtn').disabled = true;
        }
        window.location.reload()
      }
    })
  }


  function returnItem(proId, orderId, btn) {

    Swal.fire({
      title: 'Are you sure?',
      text: "You won't be able to revert this!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, return it!'
    }).then((result) => {
      if (result.isConfirmed) {
        confirmThis()
        Swal.fire(
          'Deleted!',
          'Your file has been deleted.',
          'success'
        )
      }
    })



    function confirmThis() {

      $.ajax({
        url: '/return',
        method: 'post',
        data: {
          prodId: proId,
          orderId: orderId
        },
        success: (response) => {
          if (response.status) {
            Swal.fire({
              position: 'top-end',
              icon: 'success',
              title: 'Your work has been saved',
              showConfirmButton: false,
              timer: 1500
            })
          } else {
            Swal.fire('Already  been returned')
          }
        }

      })
    }
  }


  function downloadInvoice(orderId, index) {

    let timerInterval
    Swal.fire({
      title: 'Downloading !',
      html: 'download in<b></b> milliseconds.',
      timer: 3000,
      timerProgressBar: true,
      didOpen: () => {
        Swal.showLoading()
        const b = Swal.getHtmlContainer().querySelector('b')
        timerInterval = setInterval(() => {
          b.textContent = Swal.getTimerLeft()
        }, 100)
      },
      willClose: () => {
        clearInterval(timerInterval)
      }
    }).then((result) => {
      /* Read more about handling dismissals below */
      if (result.dismiss === Swal.DismissReason.timer) {
        console.log('I was closed by the timer')
      }
    })


    $.ajax({
      url: '/get-order-data/' + orderId,
      method: 'get',
      success: (response) => {
        console.log(response.orders.productDetails);
        let orderData = response.orders
        var data = getSampleData(orderData, index);
        easyinvoice.createInvoice(data, function(result) {
          easyinvoice.download('myInvoice.pdf', result.pdf);
          console.log('downloading');

        });
      }
    })
  }

  function getSampleData(orderData, index) {

    return {

      images: {
        logo: 'https://designs.bobcares.com/wp-content/uploads/2018/01/Dress-Up_new.png',
        // background: 'https://public.easyinvoice.cloud/img/watermark-draft.jpg'
      },
      sender: {
        company: 'Dress Up',
        address: 'Infopark Street 24',
        zip: '680712',
        city: 'Kochi',
        country: 'India'
        // "custom1": "custom value 1",
        // "custom2": "custom value 2",
        // "custom3": "custom value 3"
      },
      client: {
        company: orderData.firstName + ' ' + orderData.lastName,
        address: orderData.shippingAddress.street,
        zip: orderData.shippingAddress.pincode,
        city: orderData.shippingAddress.town,
        country: orderData.shippingAddress.country,
        // "custom1": "custom value 1",
        // "custom2": "custom value 2",
        // "custom3": "custom value 3"
      },


      information: {
        number: orderData.mobile,
        date: orderData.createdAt,
        'due-date': '31-12-2021'
      },

      products: [{
          quantity: orderData?.productDetails[index]?.quantity,
          description: orderData?.productDetails[index]?.productsName,
          'tax-rate': 0,
          price: orderData?.productDetails[index]?.productsPrice
        },

      ],

      'bottom-notice': 'Kindly pay your invoice within 15 days.',
      settings: {
        currency: 'INR' // See documentation 'Locales and Currency' for more info. Leave empty for no currency.

      }

    };
  }
</script>